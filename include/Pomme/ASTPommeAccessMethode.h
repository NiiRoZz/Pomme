/* Generated By:JJTree: Do not edit this line. ASTPommeAccessMethode.h Version 7.0 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
#ifndef ASTPommeAccessMethode_H_
#define ASTPommeAccessMethode_H_

#include "PommeNode.h"

namespace Pomme {
class PommeLexer;

class ASTPommeAccessMethode : public PommeNode {
public: 
           ASTPommeAccessMethode(int id);
           ASTPommeAccessMethode(PommeLexer *parser, int id);
  virtual ~ASTPommeAccessMethode();

  /** Accept the visitor. **/
  virtual void  jjtAccept(PommeLexerVisitor *visitor, void * data);
  int index = 0;
  bool global = false;
  bool native = false;
  bool methodCall = false;
  bool superCall = false;
  bool superConstructorCall = false;
  std::string name;
};

}

#endif
